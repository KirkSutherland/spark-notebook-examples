{"paragraphs":[{"text":"%pyspark\n\nimport matplotlib\nmatplotlib.use('Agg')\n\nimport matplotlib.pyplot as plt\nimport StringIO\ndef show(p):\n  img = StringIO.StringIO()\n  p.savefig(img, format='svg')\n  img.seek(0)\n  print \"%html <div style='width:600px'>\" + img.buf + \"</div>\"\n","authenticationInfo":{},"dateUpdated":"May 10, 2016 10:59:09 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905536588_-107003378","id":"20160228-230101_323156556","dateCreated":"May 10, 2016 6:38:56 PM","dateStarted":"May 10, 2016 10:59:06 PM","dateFinished":"May 10, 2016 10:59:06 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10372","errorMessage":""},{"text":"%sh\nmkdir /vagrant/data\nwget https://raw.githubusercontent.com/felixcheung/spark-notebook-examples/master/data/text8_linessmall\nmv -f text8_linessmall /vagrant/data/\nls -lart /vagrant/data\n","authenticationInfo":{},"dateUpdated":"May 10, 2016 11:04:03 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905999770_-1946075761","id":"20160510-184639_814748954","dateCreated":"May 10, 2016 6:46:39 PM","dateStarted":"May 10, 2016 11:01:34 PM","dateFinished":"May 10, 2016 11:02:44 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10373","errorMessage":""},{"text":"%pyspark\n\nfrom pyspark.mllib.feature import Word2Vec\ntextpath = '/vagrant/data/text8_linessmall'\ninp = sc.textFile(textpath).map(lambda row: row.split(\" \"))\ninp.cache()\n\nword2vec = Word2Vec()\nmodel = word2vec.fit(inp)\n","authenticationInfo":{},"dateUpdated":"May 10, 2016 11:19:11 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905536589_-107388127","id":"20160228-223630_1862616080","dateCreated":"May 10, 2016 6:38:56 PM","dateStarted":"May 10, 2016 11:19:11 PM","dateFinished":"May 10, 2016 11:20:51 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10374","errorMessage":"","focus":true},{"text":"%md\n\n# Word vector\n###Word2Vec computes distributed vector representation of words. Distributed vector representation is showed to be useful in many natural language processing applications such as named entity recognition, disambiguation, parsing, tagging and machine translation. https://code.google.com/p/word2vec/  \n<br>\n\n###Spark implements the Skip-gram approach. With Skip-gram we want to predict a window of words given a single word.\n###It was recently shown that the word vectors capture many linguistic regularities, for example vector operations vector('Paris') - vector('France') + vector('Italy') results in a vector that is very close to vector('Rome'), and vector('king') - vector('man') + vector('woman') is close to vector('queen') [3, 1].\n\n# Data set\n\n###Wikipedia dump http://mattmahoney.net/dc/textdata\n###grep -o -E '\\w+(\\W+\\w+){0,15}' text8 > text8_lines\n","authenticationInfo":{},"dateUpdated":"May 10, 2016 11:05:08 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":false,"graph":{"mode":"table","height":372,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905536590_-106233880","id":"20160228-223804_234591975","dateCreated":"May 10, 2016 6:38:56 PM","dateStarted":"May 10, 2016 11:05:08 PM","dateFinished":"May 10, 2016 11:05:08 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10375","errorMessage":""},{"text":"%pyspark\n \nsynonyms = model.findSynonyms('apache', 40)\nfor word, cosine_distance in synonyms:\n  print \"{}: {}\".format(word, cosine_distance)\n","authenticationInfo":{},"dateUpdated":"May 10, 2016 11:05:31 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905536590_-106618629","id":"20160228-223716_1764415225","dateCreated":"May 10, 2016 6:38:56 PM","dateStarted":"May 10, 2016 11:05:31 PM","dateFinished":"May 10, 2016 11:05:31 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10376","errorMessage":""},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462922373944_975598555","id":"20160510-231933_855396069","dateCreated":"May 10, 2016 11:19:33 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10915","text":"%sh\n\npip install Image\n# pip install git+git://github.com/amueller/word_cloud.git - doesn't work - think it's missing Cypthon\nwget https://github.com/amueller/word_cloud/archive/master.zip\nunzip master.zip\nrm -f master.zip\npushd word_cloud-master\npip install -r requirements.txt\npython setup.py install\npopd\n","dateUpdated":"May 10, 2016 11:21:47 PM","errorMessage":""},{"text":"%pyspark\n\nfrom wordcloud import WordCloud, STOPWORDS\n \nwords = \" \".join([x[0] for x in synonyms for times in range(0, int(x[1]*10))])\n \nwordcloud = WordCloud(#font_path='/usr/share/fonts/some.ttf',\n                            stopwords=STOPWORDS,\n                            background_color='white',\n                            width=1800,\n                            height=1400\n                           ).generate(words)\nplt.clf()\nplt.imshow(wordcloud)\nplt.axis('off')\nshow(plt)\n","authenticationInfo":{},"dateUpdated":"May 10, 2016 11:22:55 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905536591_-106618629","id":"20160228-224114_445751380","dateCreated":"May 10, 2016 6:38:56 PM","dateStarted":"May 10, 2016 11:22:55 PM","dateFinished":"May 10, 2016 11:23:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10378","errorMessage":"","focus":true},{"dateUpdated":"May 10, 2016 6:38:56 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462905536591_-106618629","id":"20160228-224645_737838468","dateCreated":"May 10, 2016 6:38:56 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10379"}],"name":"wikipedia","id":"2BMFU1D2V","angularObjects":{"2BJYXC3U9:shared_process":[],"2BM3HNZ9A:shared_process":[],"2BK6YYY9F:shared_process":[],"2BM8469CZ:shared_process":[],"2BMJ5HHS1:shared_process":[],"2BJUGUTZ6:shared_process":[],"2BK9JP4UX:shared_process":[],"2BN37E28N:shared_process":[],"2BMSH41WH:shared_process":[],"2BMXC4PKP:shared_process":[],"2BKY2E1KT:shared_process":[],"2BK94F9SU:shared_process":[],"2BJS7ZX34:shared_process":[],"2BJW3KXB4:shared_process":[],"2BM5ENSC4:shared_process":[],"2BM7G9XDR:shared_process":[],"2BKW36KUE:shared_process":[],"2BHV8DWGW:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}
